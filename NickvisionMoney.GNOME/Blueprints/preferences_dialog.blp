using Gtk 4.0;
using Adw 1;

Adw.PreferencesWindow _root {
  default-width: 600;
  default-height: 610;
  width-request: 360;
  modal: true;
  destroy-with-parent: false;
  hide-on-close: true;
  title: _("Preferences");

  Adw.PreferencesPage {
    vexpand: true;

    Adw.PreferencesGroup {
      title: _("UserInterface");
      description: _("UserInterfaceDescription");

      Adw.ComboRow _themeRow {
        title: _("Theme");
        model: Gtk.StringList {
          strings [_("ThemeLight"), _("ThemeDark"), _("ThemeSystem")]
        };

        [prefix]
        Gtk.Image {
          icon-name: "dark-mode-symbolic";
        }
      }

      Adw.ExpanderRow {
        title: _("Colors");
        subtitle: _("ColorsDescription");

        [prefix]
        Gtk.Image {
          icon-name: "preferences-color-symbolic";
        }
        
        Adw.ActionRow {
          title: _("TransactionColor");
          subtitle: _("TransactionColorDescription");
          activatable-widget: _transactionColorButton;
          
          [suffix]
          Gtk.ColorDialogButton _transactionColorButton {
            valign: center;
          }
        }

        Adw.ActionRow {
          title: _("TransferColor");
          subtitle: _("TransferColorDescription");
          activatable-widget: _transferColorButton;
          
          [suffix]
          Gtk.ColorDialogButton _transferColorButton {
            valign: center;
          }
        }

        Adw.ActionRow {
          title: _("GroupColor");
          subtitle: _("GroupColorDescription");
          activatable-widget: _groupColorButton;
          
          [suffix]
          Gtk.ColorDialogButton _groupColorButton {
            valign: center;
          }
        }

        Adw.ActionRow {
          title: _("AccountCheckingColor");
          subtitle: _("AccountCheckingColorDescription");
          activatable-widget: _accountCheckingColorButton;
          
          [suffix]
          Gtk.ColorDialogButton _accountCheckingColorButton {
            valign: center;
          }
        }

        Adw.ActionRow {
          title: _("AccountSavingsColor");
          subtitle: _("AccountSavingsColorDescription");
          activatable-widget: _accountSavingsColorButton;
          
          [suffix]
          Gtk.ColorDialogButton _accountSavingsColorButton {
            valign: center;
          }
        }

        Adw.ActionRow {
          title: _("AccountBusinessColor");
          subtitle: _("AccountBusinessColorDescription");
          activatable-widget: _accountBusinessColorButton;
          
          [suffix]
          Gtk.ColorDialogButton _accountBusinessColorButton {
            valign: center;
          }
        }
      }
    }

    Adw.PreferencesGroup {
      title: _("Locale");
      description: _("LocaleDescription");
      
      Adw.ActionRow {
        title: _("UseNativeDigits");
        subtitle: _("UseNativeDigits.Description");
        activatable-widget: _nativeDigitsSwitch;

        [prefix]
        Gtk.Image {
          icon-name: "preferences-desktop-locale-symbolic";
        }

        [suffix]
        Gtk.Switch _nativeDigitsSwitch {
          valign: center;
        }
      }

      Adw.ComboRow _insertSeparatorRow {
        title: _("InsertSeparator");
        subtitle: _("InsertSeparator.Description");
        subtitle-lines: 3;
        model: Gtk.StringList {
          strings [_("InsertSeparatorOff"), _("InsertSeparatorNumpad"), _("InsertSeparatorPeriodComma")]
        };

        [prefix]
        Gtk.Image {
          icon-name: "input-keyboard-symbolic";
        }
      }
    }

    Adw.PreferencesGroup {
      title: _("Backup");
      description: _("BackupDescription");

      Adw.ActionRow {
        title: _("BackupFolder");
        subtitle: _("BackupFolderDescription");

        [prefix]
        Gtk.Image {
          icon-name: "folder-download-symbolic";
        }

        [suffix]
        Adw.ViewStack _backupViewStack {
          Adw.ViewStackPage {
            name: "no-folder";
            child: Gtk.Button _selectBackupFolderButton {
              halign: end;
              valign: center;
              child: Adw.ButtonContent {
                label: _("SelectBackupFolder");
                icon-name: "folder-open-symbolic";
              };
            };
          }

          Adw.ViewStackPage {
            name: "folder-selected";
            child: Gtk.Box {
              orientation: horizontal;
              halign: end;
              valign: center;

              Gtk.Button _backupFolderButton {
                tooltip-text: _("SelectBackupFolder");
                child: Gtk.Label _backupFolderLabel {
                  ellipsize: start;
                };
              }

              Gtk.Button _unsetBackupFolderButton {
                icon-name: "larger-brush-symbolic";
                tooltip-text: _("ClearBackupFolder");
              }

              styles ["linked"]
            };
          }
        }
      }
    }
  }
}